/*
Негативные последствия, который может привести исходный кода:
Использование глобальной переменной
Возможный выход за пределы строки при срезе [:100]
Утечка памяти, так как срез сохраняет ссылку на оригинальную строку
*/
package main

import "fmt"

// Функция для создания большой строки (для примера)
func createHugeString(size int) string {
	// Просто повторяем букву 'A' size раз
	result := ""
	for i := 0; i < size; i++ {
		result += "A"
	}
	return result
}

// Исправленная функция
func someFunc() string {
	// Создали большую строку
	v := createHugeString(1 << 10) // 1024 символа

	// Проверка длины строки
	if len(v) < 100 {
		return v // Возвращаем всю строку, если она меньше 100 символов
	}

	// Создали новую строку, копируя только нужные символы
	// это освободит память от исходной большой строки
	result := make([]byte, 100)
	copy(result, v[:100])

	return string(result)
}

func main() {
	// Теперь результат сохраняется в локальной переменной
	result := someFunc()

	fmt.Printf("Длина полученной строки: %d\n", len(result))
	fmt.Printf("Первые 10 символов: %s\n", result[:10])
}
